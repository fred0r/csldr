typedef struct
{
  char name[32];
  int player;
  Vector origin;
  model_t* model;
  model_t* studiomodel;
  Vector mins;
  Vector maxs;
  int info;
  Vector angles;
  int solid;
  int skin;
  int rendermode;
  float frame;
  int sequence;
  unsigned char controller[4];
  unsigned char blending[2];
  int movetype;
  int takedamage;
  int blooddecal;
  int team;
  int classnumber;
  int iuser1;
  int iuser2;
  int iuser3;
  int iuser4;
  float fuser1;
  float fuser2;
  float fuser3;
  float fuser4;
  Vector vuser1;
  Vector vuser2;
  Vector vuser3;
  Vector vuser4;
} physent_t;

typedef struct
{
  int player_index;
  qboolean server;
  qboolean multiplayer;
  float time;
  float frametime;
  vec3_t forward;
  vec3_t right;
  vec3_t up;
  vec3_t origin;
  vec3_t angles;
  vec3_t oldangles;
  vec3_t velocity;
  vec3_t movedir;
  vec3_t basevelocity;
  vec3_t view_ofs;
  float flDuckTime;
  qboolean bInDuck;
  int flTimeStepSound;
  int iStepLeft;
  float flFallVelocity;
  vec3_t punchangle;
  float flSwimTime;
  float flNextPrimaryAttack;
  int effects;
  int flags;
  int usehull;
  float gravity;
  float friction;
  int oldbuttons;
  float waterjumptime;
  qboolean dead;
  int deadflag;
  int spectator;
  int movetype;
  int onground;
  int waterlevel;
  int watertype;
  int oldwaterlevel;
  char sztexturename[256];
  char chtexturetype;
  float maxspeed;
  float clientmaxspeed;
  int iuser1;
  int iuser2;
  int iuser3;
  int iuser4;
  float fuser1;
  float fuser2;
  float fuser3;
  float fuser4;
  vec3_t vuser1;
  vec3_t vuser2;
  vec3_t vuser3;
  vec3_t vuser4;
  int numphysent;
  physent_t physents[600];
  int nummoveent;
  physent_t moveents[64];
  int numvisent;
  physent_t visents[600];
  usercmd_t cmd;
  int numtouch;
  pmtrace_t touchindex[600];
  char physinfo[256];
  movevars_t* movevars;
  vec_t player_mins[4][3];
  vec_t player_maxs[4][3];
  const char* (*PM_Info_ValueForKey)(const char*, const char*);
  void (*PM_Particle)(vec_t*, int, float, int, int);
  int (*PM_TestPlayerPosition)(vec_t*, pmtrace_t*);
  void (*Con_NPrintf)(int, sdk_string_const char*, ...);
  void (*Con_DPrintf)(sdk_string_const char*, ...);
  void (*Con_Printf)(sdk_string_const char*, ...);
  double (*Sys_FloatTime)(void);
  void (*PM_StuckTouch)(int, pmtrace_t*);
  int (*PM_PointContents)(vec_t*, int*);
  int (*PM_TruePointContents)(vec_t*);
  int (*PM_HullPointContents)(hull_t*, int, vec_t*);
  pmtrace_t (*PM_PlayerTrace)(vec_t*, vec_t*, int, int);
  pmtrace_t* (*PM_TraceLine)(float*, float*, int, int, int);
  int32 (*RandomLong)(int32, int32);
  float (*RandomFloat)(float, float);
  int (*PM_GetModelType)(model_t*);
  void (*PM_GetModelBounds)(model_t*, vec_t*, vec_t*);
  void* (*PM_HullForBsp)(physent_t*, vec_t*);
  float (*PM_TraceModel)(physent_t*, vec_t*, vec_t*, trace_t*);
  int (*COM_FileSize)(sdk_string_const char*);
  byte* (*COM_LoadFile)(sdk_string_const char*, int, int*);
  void (*COM_FreeFile)(void*);
  sdk_string_const char* (*memfgets)(byte*, int, int*, sdk_string_const char*, int);
  qboolean runfuncs;
  void (*PM_PlaySound)(int, const char*, float, float, int, int);
  const char* (*PM_TraceTexture)(int, vec_t*, vec_t*);
  void (*PM_PlaybackEventFull)(int, int, unsigned short, float, float*, float*, float, float, int, int, int, int);
} playermove_t;
